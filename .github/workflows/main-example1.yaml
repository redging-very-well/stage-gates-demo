name: Stage-gates-main
concurrency:
  group: stage-gates-main-${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    uses: ./.github/workflows/wf-build.yaml
    with:
      artifact_name: app

  # deploy-dev:
  #   needs: build
  #   uses: ./.github/workflows/wf-deploy.yaml
  #   with:
  #     artifact_name: app
  #     environment_name: dev

  # deploy-preprod:
  #   needs: deploy-dev
  #   uses: ./.github/workflows/wf-deploy.yaml
  #   with:
  #     artifact_name: app
  #     environment_name: preprod

  # deploy-prod:
  #   needs: deploy-preprod
  #   uses: ./.github/workflows/wf-deploy.yaml
  #   with:
  #     artifact_name: app
  #     environment_name: prod

  debug:
    name: Debug
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: list-artefacts
        id: list-artefacts
        uses: actions/github-script@v6
        with:
          script: |
            return await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: 5804107797
            });

      - name: download-artefacts
        run: |
          echo "${{steps.list-artefacts.outputs.result}}"

          for row in $(echo "${{steps.list-artefacts.outputs.result}}" | jq -r '.[]'); do
            url=$(echo $siteJSON | jq -r .archive_download_url)
            name=$(echo $siteJSON | jq -r .name).zip

            curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              $url \
              --output "$name"

          done

          ls -la

      - name: fetch-artefacts
        id: fetch-artefacts
        uses: actions/github-script@v6
        with:
          script: |

            const runId = 5804107797;
            const resultOldRun = await github.request(`https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}/artifacts`);
            console.log(JSON.stringify(resultOldRun.data.artifacts, null, 2));

            return await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: resultOldRun.data.artifacts[0].id,
              archive_format: 'zip'
            });

      - name: ls
        run: |
          echo "${{steps.fetch-artefacts.outputs.result}}"
          ls -la

# const resultThisRun = await github.request(`https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/actions/runs/${{ github.run_id }}/artifacts`);
# console.log(resultThisRun);

# const workflowRuns = await github.paginate(github.rest.actions.getWorkflowRun({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   run_id: 5804107797
# }));

# for (const wr of workflowRuns) {
#   console.log(JSON.stringify(wr, null, 2));
# }

# const listArtifacts = await github.paginate(github.rest.actions.listWorkflowRunArtifacts({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   run_id: 5804107797
# }));

# for (const art of listArtifacts) {
#   console.log(JSON.stringify(art, null, 2));
# }

# const thisListArtifacts = await github.paginate(github.rest.actions.listWorkflowRunArtifacts({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   run_id: ${{ github.run_id }}
# }));

# for (const art of thisListArtifacts) {
#   console.log(JSON.stringify(art, null, 2));
# }

# const artifactResponse = github.rest.actions.getArtifact({
#   owner: context.repo.owner,
#   repo: context.repo.repo,
#   artifact_id: 0
# });

# console.log(JSON.stringify(artifactResponse, null, 2));
